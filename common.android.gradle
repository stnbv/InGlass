apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'ru.mobileup.code-quality-android'
apply from: "${rootProject.projectDir}/versions.gradle"

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        release {
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_SECURED", "true"
        }
        debug {
            debuggable true
            buildConfigField "boolean", "IS_SECURED", "false"
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    flavorDimensions "mode"
    productFlavors {
        app {
            dimension "mode"
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
        emulator {
            dimension "mode"
        }
    }

    // Последовал решению https://stackoverflow.com/questions/36540015/how-to-reduce-apk-apk-size-in-android-studio для уменьшения размера apk
    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'lib/arm64-v8a/libcardioDecider.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer_tegra2.so'
        exclude 'lib/arm64-v8a/libopencv_core.so'
        exclude 'lib/arm64-v8a/libopencv_imgproc.so'
        exclude 'lib/armeabi/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer_tegra2.so'
        exclude 'lib/armeabi-v7a/libopencv_core.so'
        exclude 'lib/armeabi-v7a/libopencv_imgproc.so'
        exclude 'lib/mips/libcardioDecider.so'
        exclude 'lib/x86/libcardioDecider.so'
        exclude 'lib/x86/libcardioRecognizer.so'
        exclude 'lib/x86/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86/libopencv_core.so'
        exclude 'lib/x86/libopencv_imgproc.so'
        exclude 'lib/x86_64/libcardioDecider.so'
        exclude 'lib/x86_64/libcardioRecognizer.so'
        exclude 'lib/x86_64/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86_64/libopencv_core.so'
        exclude 'lib/x86_64/libopencv_imgproc.so'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Kotlin
    implementation libraries.kotlinStdlib
    implementation libraries.coreKtx

    //Android
    implementation libraries.appcompat
    implementation libraries.coreRuntime

    //UI
    implementation libraries.materialSupport
    implementation libraries.constraintLayoutSupport
    implementation libraries.circleImageViewSupport

    //Intuit- a scalable size unit
    implementation libraries.intuitSdp
    implementation libraries.intuitSsp

    //Logger
    implementation libraries.timber

    //Coroutines
    implementation libraries.coroutinesCore
    implementation libraries.coroutinesAndroid

    //Hilt
    implementation libraries.hiltCore
    kapt libraries.hiltCompiler

    //Decoro
    implementation libraries.decoro

    //Glide
    implementation libraries.glide
    annotationProcessor libraries.glideAnnProcess

    //ExoPlayer
    implementation libraries.exoplayer
    implementation libraries.exoplayerUi

}

codeQuality {
    reportsDirectory = file('build/reports')
    issuesFile = rootProject.file('gl-code-quality-report.json')
    collectInformationIssues = true
}
